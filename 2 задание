# Домашнее задание, Условия задачи:
print("Задание 2: Дан текст: в первой строке задано число строк, далее идут сами строки.\nВыведите слово, которое в этом тексте "
      "встречается чаще всего.\nЕсли таких слов несколько, выведите то, которое меньше в лексикографическом порядке меньше. ")  # "Слово которое первое повторилось.\n")
print("Чтобы вставить готовый текст, введите - 1\nЕсли желаете ввести текст вручную, введите - 2")
g1 = int(input("Введите 1 или 2 : "))
stroka_1 = ""  # Все введенные строки хранятся в одной строке
if g1 == 1:  # вставляем готовые строки
        N = 4 # Количество строк
        a_1 = "1. Dog? stop! dog. caT."
        a_2 = "2. Cat, mat, Cat. top, gop, top top "
        a_3 = "3. top, gop, top top"
        a_4 = "4. Просто текст! Тут же может быть, просто текст?"
        stroka_1 = a_1 + "\n" + a_2 + "\n" + a_3 + "\n" + a_4 + "\n"
        print("\nНаша строка:\n", stroka_1) # Выводим исходные строки
else:  # пользователь сам выбирает сколько и каких строк будет
        N = int(input("Введите кол-во строк: ")) # Количество строк
        stroka_1 = ""  # Все введенные строки хранятся в одной строке
        print("\nНаша строка:\n") # Выводим исходные строки
        for cikl_1 in range(N):  # Создаем столько строк, сколько указал пользователь
                set1 = input(f"{cikl_1 + 1}. Введите строку:")  # Вписываем вручную содержимое строки
                stroka_1 += set1 + "\n"  # сохраняем полученную строку
                print(cikl_1 + 1,
                      set1)  # Тк цикл начинается с 0, добавим +1 для удобного отображения порядкового номера

stroka_2 = str(stroka_1).lower()  # Делаем все буквы нижнего регистра
stroka_3 = list()  # Создаем пустой список, для сохранения слов без символов
alfavit = "abcdefghijklmnopqrstuvwxyz"  # Английский алфавит
rus_alfavit = "абвгдеёжзийклмнопрстуфхцчшщъыьэюя"  # Русский алфавит
a1 = []  # Создаем пустой список для повторяющихся слов
set3 = ""  # Создаем пустую строку, для сохранения слов без символов
nomer = 0 # Создаем переменную для отображения порядкового номера
for cikl_2 in range(len(stroka_2)):  # Создаем цикл для проверки букв и удаления ненужных символов

        for cikl_3 in rus_alfavit:  # Перебираем буквы русского алфавита
                if stroka_2[cikl_2] == cikl_3: # Создаем условия для поиска букв русского алфавита
                        set3 += stroka_2[cikl_2] # Сохраняем полученный результат

        for cikl_4 in alfavit:  # Перебираем буквы английского алфавита
                if stroka_2[cikl_2] == cikl_4: # Создаем условия для поиска букв английского алфавита
                        set3 += stroka_2[cikl_2] # Сохраняем полученный результат

        if stroka_2[cikl_2] == " ":  # создаем условие: находим в нашем списке пробелы
                set3 += stroka_2[cikl_2]  # Сохраняем полученный результат
        elif stroka_2[cikl_2] == "\n":  # создаем условие: находим в нашем списке конец строки
                nomer += 1 # Даём нашим строкам порядковый номер
                s1 = set3.split() # Разбиваем нашу строку на слова
                stroka_3.append(s1) # Сохраняем наши слова в список
                set3 = "" # Чистим строку от предыдущих значений

                for cikl_5 in range(len(s1)):  # Перебираем слова из списка

                        if s1.count(s1[cikl_5]) == 1:  # если слово не повторяется: пропускаем
                                pass
                                # print("слово не повторяется")
                        else:  # если есть слова повторяются:
                                a1.append(s1[cikl_5]) # Сохраняем в отдельный список
                a2 = sorted(list(set(a1))) # Сортируем, для отображения в лексикографическом порядке
                # print("отсортированное множество: ", a2)
                for cikl_7 in set(a2): # Перебираем уникальные слова, которые повторяются в нашей строке
                        # print(f"слово {cikl_7} повторяется {a1.count(cikl_7)} раз")
                        if len(a1) == a1.count(cikl_7): # Создаем условия для поиска слов, которые повторяются чаще
                                print(f"{nomer}. наиболее повторяющееся слово: {a1[0]}. Оно повторилось {a1.count(a1[0])} раз.")
                                break
                        if a1.count(cikl_7) < len(a1) - a1.count(cikl_7):
                                print(f"{nomer}. наиболее повторяющееся слово: {a1[len(a1) - a1.count(cikl_7)]}. Оно повторилось {a1.count(a1[len(a1) - a1.count(cikl_7)])} раз.")
                                break
                        if len(a1) == (len(a1) / 2) * a1.count(cikl_7) :
                                print(f"{nomer}. наиболее повторяющееся слово: {a1[0]}. Оно повторилось {a1.count(a1[0])} раз.")
                                break
                a1.clear() # Чистим список от предыдущих значений
